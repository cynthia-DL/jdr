<vignette class="col-lg-4 col-md-6 col-sm-12 mx-auto">
	<div>
		<div class="card-body">
			<ul class="list-group">
				<li class="list-group-item bg-primary text-white">
					<!-- Prenom et PV du personnage -->
					<h2>{props.perso.prenom}
					<span class="badge badge-pill badge-secondary">
						<i class="fa fa-heartbeat" aria-hidden="true">&nbsp;</i>
						{props.perso.pv} / {props.perso.pvMax}
					</span>
					<span if={props.perso.armure} class="badge badge-pill badge-info">
						<i class="fa fa-shield" aria-hidden="true">&nbsp;</i>
						{props.perso.armure}
					</span>
					<br />
					<span if={props.perso.nomEtat == "ACTIF"} class="badge badge-pill badge-success">
						<i class="fa fa-check-square-o" aria-hidden="true">&nbsp;</i>
						{props.perso.nomEtat}
					</span>
					<span if={props.perso.nomEtat == "REROLL"} class="badge badge-pill badge-warning">
						<i class="fa fa-recycle" aria-hidden="true">&nbsp;</i>
						{props.perso.nomEtat}
					</span>
					<span if={props.perso.nomEtat == "MORT"} class="badge badge-pill badge-danger">
						<i class="fa fa-window-close" aria-hidden="true">&nbsp;</i>
						{props.perso.nomEtat}
					</span>
					</h2>
				</li>
				<!-- Stats -->
				<li class="list-group-item border-primary">
					<table class="table table-hover">
					  <thead>
					    <tr class="table-active">
					      <th scope="col">F</th>
					      <th scope="col">A</th>
					      <th scope="col">S</th>
					      <th scope="col">P</th>
					      <th scope="col">M</th>
					      <th scope="col">I</th>
					      <th scope="col">C</th>
					    </tr>
					    <tr>
					      <td scope="col">{props.perso.statistiques.force}</td>
					      <td scope="col">{props.perso.statistiques.agilite}</td>
					      <td scope="col">{props.perso.statistiques.social}</td>
					      <td scope="col">{props.perso.statistiques.perception}</td>
					      <td scope="col">{props.perso.statistiques.mental}</td>
					      <td scope="col">{props.perso.statistiques.intelligence}</td>
					      <td scope="col">{props.perso.statistiques.constitution}</td>
					    </tr>
					  </thead>
					</table>
				</li>
				<!-- Boutton pour ouvrir les fiches -->
				<li class="list-group-item border-primary text-center">
					<button class="btn btn-outline-success" onclick={_test}>
						<i class="fa fa-info-circle"></i> 
							En voir plus</button>
					<button if={props.perso.idUtilisateur == state.sessionId || state.estMJ == 1} class="btn btn-outline-danger" onclick={_toggleDeleteMode}>
						<i class="fa fa-trash" aria-hidden="true"></i>
					</button>
				</li>
				<li class="list-group-item border-primary" if={state.deleteMode}>
					Voulez-vous vraiment supprimer {props.perso.prenom}? 
					<button class="btn btn-danger" onclick={_delete}>
						Oui
					</button>
					<button class="btn btn-secondary" onclick={_toggleDeleteMode}>
						Non
					</button>
				</li>
			</ul>
		</div>
	</div>
	<script>
		export default {
			state : {
				deleteMode : false,
				sessionId : [sessionId],
				estMJ : [estMJ]
			},

			// Cette fonction ouvre une fiche via le pere
			_test(){
				if (this.props.fct){
					this.props.fct(this.props.perso.idPersonnage);
				}
			},

			_toggleDeleteMode(){
				this.state.deleteMode = !this.state.deleteMode;
				this.update();
			},

			_delete(){
				this.sa.deletePersonnage(this.props.perso.idPersonnage).then(
					(e) => {
						this.state.deleteMode = false;
						this.props.return();
					}
				);
			}
		}
	</script>
</vignette>