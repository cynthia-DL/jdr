<fiche class="container">
	<!-- Boutton retour -->
	<button class="btn btn-danger" onclick={props.return}><i class="fa fa-mail-reply"></i> RETOUR</button>
	
	<!-- Debut de la fiche -->
	<div class="container text-center  mx-auto">
		<h1>Fiche de {props.perso.prenom} - 
		<span class="badge badge-pill badge-secondary"><i class="fa fa-heartbeat" aria-hidden="true"></i> {props.perso.pv} / {props.perso.pvMax}</span>
		<span if={props.perso.armure} class="badge badge-pill badge-success"><i class="fa fa-shield" aria-hidden="true"></i> {props.perso.armure}</span>
		</h1>
		<hr>
		<!-- Les bouttons de navigation dans une fiche -->
		<div class="row">
			<button class="btn btn-outline-primary mx-auto" onclick={_onInfo}><i class="fa fa-info" aria-hidden="true"></i> Informations</button>
			<button class="btn btn-outline-primary mx-auto" onclick={_onStats}><i class="fa fa-bar-chart" aria-hidden="true"></i> Statistiques</button>
			<button class="btn btn-outline-primary mx-auto" onclick={_onComp}><i class="fa fa-book" aria-hidden="true"></i> Compétences, dons et traits</button>
			<button class="btn btn-outline-primary mx-auto" onclick={_onInv}><i class="fa fa-briefcase" aria-hidden="true"></i> Inventaire</button>
			<button class="btn btn-outline-primary mx-auto" onclick={_onFam} if={props.perso.familier}><i class="fa fa-paw" aria-hidden="true"></i> Familier(s)</button>
		</div>
		<br>

		<!-- Infos générales -->
		<div if={state.info}>
			<h2>Informations générales</h2>
			<div class="row">
				<div class="card col-5 mx-auto mb-3">
					<em class="text-primary">Nom</em>
					<em if={props.perso.nom}>{props.perso.nom}</em>
					<em if={!props.perso.nom}>Ce personnage n'a pas de nom</em>	
				</div>
				
				<div class="card col-5  mx-auto mb-3">
					<em class="text-primary">Prenom</em>
					<em if={props.perso.prenom}>{props.perso.prenom}</em>
					<em if={!props.perso.prenom}>Ce personnage n'a pas de prénom</em>
				</div>
				
			</div>

			<div class="row">
				<div class="card col-3 mx-auto mb-3">
					<em class="text-primary">Âge</em>
					<em if={props.perso.age}>{props.perso.age}</em>
					<em if={!props.perso.age}>Ce personnage n'a pas d'age</em>
				</div>
				<div class="card col-3 mx-auto mb-3">
					<em class="text-primary">Niveau</em>
					<em if={props.perso.niveau}>{props.perso.niveau}</em>
					<em if={!props.perso.niveau}>Ce personnage n'a pas de niveau</em>
				</div>
				
				<div class="card col-3 mx-auto mb-3">
					<em class="text-primary">Classe</em>
					<em if={props.perso.classe}>{props.perso.classe}</em>
					<em if={!props.perso.classe}>Ce personnage n'a pas de classe</em>
				</div>
			</div>

			<div class="row">
				<div class="card col-5 mx-auto mb-3">
					<em class="text-primary">Race</em>
					<em if={props.perso.race}>{props.perso.race}</em>
					<em if={!props.perso.race}>Ce personnage n'a pas de race. Yikes.</em>
				</div>
				<div class="card col-5 mx-auto mb-3">
					<em class="text-primary">Genre</em>
					<em if={props.perso.genre}>{props.perso.genre}</em>
					<em if={!props.perso.genre}>Ce personnage n'a pas de genre</em>
				</div>
			</div>
			<hr>
			<div class="card mx-auto mb-3">
				<em class="text-primary">Lore</em>
				<em if={props.perso.lore}>{props.perso.lore}</em>
				<em if={!props.perso.lore}>Ce personnage n'a pas de lore</em>
			</div>
		</div>
	
		<!-- Statistiques -->
		<div if={state.stats}>
			<h2>Statistiques</h2>
				<table class="table table-hover" if={props.perso.statsData}>
				  <thead>
				    <tr class="table-active">
				      <th scope="col">Force</th>
				      <th scope="col">Agilité</th>
				      <th scope="col">Social</th>
				      <th scope="col">Perception</th>
				      <th scope="col">Mental</th>
				      <th scope="col">Inteligence</th>
				      <th scope="col">Constitution</th>
				    </tr>
				    <tr>
				      <td scope="col">{props.perso.stats.F}</td>
				      <td scope="col">{props.perso.stats.A}</td>
				      <td scope="col">{props.perso.stats.S}</td>
				      <td scope="col">{props.perso.stats.P}</td>
				      <td scope="col">{props.perso.stats.M}</td>
				      <td scope="col">{props.perso.stats.I}</td>
				      <td scope="col">{props.perso.stats.C}</td>
				    </tr>
				  </thead>
				</table>
				<chart stats={props.perso.statsData}></chart>
			<hr>
		</div>

		<div if={state.comp}>
			<div class="row">
				<!-- Competences -->
				<div class="col-5 mx-auto">
					<h2>Competences</h2>
					<div each={c in props.perso.competences}>
						<div class="card  mb-3">
							<div class="card-header" if={c.titre}>{c.titre}</div>
							<div class="card-body">{c.desc}</div>
						</div>
					</div>
				</div>		
		

				<!-- Dons et traits -->
				<div class="col-5  mx-auto">
					<h2>Don et traits</h2>
					<div each={c in props.perso.traits}>
						<div class="card  mb-3">
							<div class="card-header" if={c.titre}>{c.titre}</div>
							<div class="card-body">{c.desc}</div>
						</div>
					</div>
				</div>		
			</div>
		</div>

		<!-- Inventaire -->
		<div if={state.inv}>
			<!-- Contenu du sac -->
			<h2>Sac de {props.perso.prenom}</h2>
			<div class="row d-flex align-items-center">
				<div class="col-3 mx-auto" each={i in props.perso.inventaire.sac}>
					<div class="card-body">
						<ul class="list-group">
							<li class="list-group-item bg-primary text-white" if={i.label}>{i.label}</li>
							<li class="list-group-item border-primary" if={i.type}>Type : {i.type}</li>
							<li class="list-group-item border-primary" if={i.degat}>Dégats : D{i.degat}</li>
							<li class="list-group-item border-primary" if={i.contenu}>Contenu : {i.contenu}</li>
							<li class="list-group-item border-primary" if={i.qtte}>Quantité : {i.qtte}</li>
							<li class="list-group-item border-primary" if={i.animal}>Animal : {i.animal}</li>
							<li class="list-group-item border-primary" if={i.desc}>Description : {i.desc}</li>
						</ul>
					</div>
				</div>
				<div class="mx-auto" if={!props.perso.inventaire.sac}>
					Le sac de ce personnage est vide
				</div>
			</div>
			
			<!-- Contenu de la selle -->
			<h2>Selle de {props.perso.prenom}</h2>
			<div class="row d-flex align-items-center">
				<div class="col-3 mx-auto" each={i in props.perso.inventaire.selle}>
					<div class="card-body">
						<ul class="list-group">
							<li class="list-group-item bg-primary text-white" if={i.label}>{i.label}</li>
							<li class="list-group-item border-primary" if={i.type}>Type : {i.type}</li>
							<li class="list-group-item border-primary" if={i.degat}>Dégats : D{i.degat}</li>
							<li class="list-group-item border-primary" if={i.contenu}>Contenu : {i.contenu}</li>
							<li class="list-group-item border-primary" if={i.qtte}>Quantité : {i.qtte}</li>
							<li class="list-group-item border-primary" if={i.animal}>Animal : {i.animal}</li>
							<li class="list-group-item border-primary" if={i.desc}>Description : {i.desc}</li>
						</ul>
					</div>
				</div>
				<div class="mx-auto" if={!props.perso.inventaire.selle}>
					La selle de ce personnage est vide
				</div>
			</div>
		</div>
		
		<!-- Familiers -->
		<div if={state.fam}>
			<div class="col-10 mx-auto" each={f in props.perso.familier}>
				<div class="card-body">
					<ul class="list-group">
						<!-- Nom du famillier + ses PV -->
						<li class="list-group-item bg-primary text-white">
							<h3 if={f.nom}>{f.nom}</h3>
							<span class="badge badge-pill badge-secondary">PV : {f.armure} + {f.pv} / {f.pvMax}</li>
						<!-- Label -->
						<li class="list-group-item bg-primary text-white" if={f.label}>{f.label}</li>
						<!-- Type -->
						<li class="list-group-item border-primary" if={f.type}>Type : {f.type}</li>
						<!-- Statistiques du familier -->
						<li class="list-group-item border-primary">
							<table class="table table-hover">
							  <thead>
							    <tr class="table-active">
							      <th scope="col" if={f.stats.F}>Force</th>
							      <th scope="col" if={f.stats.A}>Agilité</th>
							      <th scope="col" if={f.stats.S}>Social</th>
							      <th scope="col" if={f.stats.P}>Perception</th>
							      <th scope="col" if={f.stats.M}>Mental</th>
							      <th scope="col" if={f.stats.I}>Inteligence</th>
							      <th scope="col" if={f.stats.C}>Constitution</th>
							    </tr>
							    <tr>
							      <td scope="col" if={f.stats.F}>{f.stats.F}</td>
							      <td scope="col" if={f.stats.A}>{f.stats.A}</td>
							      <td scope="col" if={f.stats.S}>{f.stats.S}</td>
							      <td scope="col" if={f.stats.P}>{f.stats.P}</td>
							      <td scope="col" if={f.stats.M}>{f.stats.M}</td>
							      <td scope="col" if={f.stats.I}>{f.stats.I}</td>
							      <td scope="col" if={f.stats.C}>{f.stats.C}</td>
							    </tr>
							  </thead>
							</table>							
						</li>
						<!-- Description du familier -->
						<li class="list-group-item border-primary" if={f.desc}>Description : {f.desc}</li>
				</div>
			</div>
		</div>
	</div>	
	<script>
		export default {
			state : {
				info : true,
				stats : false,
				comp : false,
				inv : false,
				fam : false,
			},

			_onInfo(){
				this.state.info = true;
				this.state.stats = false;
				this.state.comp = false;
				this.state.inv = false;
				this.state.fam = false;
				this.update();
			},

			_onStats(){
				this.state.info = false;
				this.state.stats = true;
				this.state.comp = false;
				this.state.inv = false;
				this.state.fam = false;
				this.update();
			},

			_onComp(){
				this.state.info = false;
				this.state.stats = false;
				this.state.comp = true;
				this.state.inv = false;
				this.state.fam = false;
				this.update();
			},

			_onInv(){
				this.state.info = false;
				this.state.stats = false;
				this.state.comp = false;
				this.state.inv = true;
				this.state.fam = false;
				this.update();
			},

			_onFam(){
				this.state.info = false;
				this.state.stats = false;
				this.state.comp = false;
				this.state.inv = false;
				this.state.fam = true;
				this.update();
			}
		}
	</script>
</fiche>