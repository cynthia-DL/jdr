<newpersonnage>
	<div class="container">
		<form class="form-group">
		<h2>Informations générales</h2>
		<div class="row">
			<div class="col-3 mx-auto mb-3">
				<em class="text-primary">Nom</em>
				<input class="form-control" type="text" name="nom">
			</div>
			
			<div class="col-3 mx-auto mb-3">
				<em class="text-primary">Prénom</em>
				<input class="form-control" type="text" name="prenom">
			</div>

			<div class="col-3 mx-auto mb-3">
				<em class="text-primary">Pv</em>
				<input class="form-control" type="number" name="pv" min="1">
			</div>
		</div>
		<div class="row">
			<div class="col-5 mx-auto mb-3">
				<em class="text-primary">Race</em>
				<select class="form-control" id="race" nom="race"></select>
			</div>
			<div class="col-5 mx-auto mb-3">
				<em class="text-primary">Genre</em>
				<select class="form-control" id="genre" nom="genre"></select>
			</div>
		</div>
		<div class="row">
			<div class="col-3 mx-auto mb-3">
				<em class="text-primary">Âge</em>
				<input class="form-control" type="number" name="age" min="0" max="99999">
			</div>
			<div class="col-3 mx-auto mb-3">
				<em class="text-primary">Niveau</em>
				<input class="form-control" type="number" name="niveau">
			</div>
			
			<div class="col-3 mx-auto mb-3">
				<em class="text-primary">Classe</em>
				<select class="form-control" id="classe" nom="classe"></select>
			</div>
		</div>
		<div class="row">
			<div class="mx-auto mb-3 col">
				<em class="text-primary">Lore</em>
				<textarea class="form-control" name="lore" rows="3"></textarea>
			</div>
		</div>
		<h2>Statistiques</h2>
		<div class="row">
				<table class="table table-hover mx-auto ">
				  <thead>
				    <tr class="table-active">
				      <th scope="col">Force</th>
				      <th scope="col">Agilité</th>
				      <th scope="col">Social</th>
				      <th scope="col">Perception</th>
				      <th scope="col">Mental</th>
				      <th scope="col">Inteligence</th>
				      <th scope="col">Constitution</th>
				    </tr>
				    <tr>
				      <td scope="col">
				      	<input class="form-control" type="number" name="force" min="20" max="80">
				      </td>
				      <td scope="col">
				      	<input class="form-control" type="number" name="agilite" min="20" max="80">
				      </td>
				      <td scope="col">
				      	<input class="form-control" type="number" name="social" min="20" max="80">
				      </td>
				      <td scope="col">
				      	<input class="form-control" type="number" name="perception" min="20" max="80">
				      </td>
				      <td scope="col">
				      	<input class="form-control" type="number" name="mental" min="20" max="80">
				      </td>
				      <td scope="col">
				      	<input class="form-control" type="number" name="intelligence" min="20" max="80">
				      </td>
				      <td scope="col">
				      	<input class="form-control" type="number" name="constitution" min="20" max="80">
				      </td>
				    </tr>
				  </thead>
				</table>
		</div>
		<div class="row">
			<button class="btn btn-primary mx-auto" type="submit">
				Créer ce personnage
			</button>
		</div>
	</form>
	</div>
	<script>
		export default {
			state : {
				enumGenre : [],
				enumClasse : [],
				enumRace : []
			},

			onMounted(props, state){
				var genre = document.querySelector("#genre");
				var classe = document.querySelector("#classe");
				var race = document.querySelector("#race");

				this.props.sa.getAllGenre().then(
					(e) => {
						this.state.enumGenre = JSON.parse(e);
						console.log(this.state.enumGenre);
						this.update();

						for (var i = 0; i < this.state.enumGenre.length; i++) {
							var tmp = document.createElement("option");
							tmp.value = this.state.enumGenre[i];
							tmp.innerText = this.state.enumGenre[i];
							genre.appendChild(tmp);

						}

						this.props.sa.getAllClasse().then(
							(e) => {
								this.state.enumClasse = JSON.parse(e);
								console.log(this.state.enumClasse);
								this.update();

								for (i = 0; i < this.state.enumClasse.length; i++) {
									tmp = document.createElement("option");
									tmp.value = this.state.enumClasse[i];
									tmp.innerText = this.state.enumClasse[i];
									classe.appendChild(tmp);
								}

								this.props.sa.getAllRace().then(
									(e) => {
										this.state.enumRace = JSON.parse(e);
										console.log(this.state.enumRace);
										this.update();

										for (i = 0; i < this.state.enumRace.length; i++) {
											tmp = document.createElement("option");
											tmp.value = this.state.enumRace[i];
											tmp.innerText = this.state.enumRace[i];
											race.appendChild(tmp);

										}
									}
								);
							}
						);
					}
				);
			}
		}
	</script>
</newpersonnage>