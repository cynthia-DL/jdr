<app>
	<!-- Nav bar -->
	<nav class="navbar navbar-expand  navbar-dark bg-dark">
		<button class="btn nav-brand hover-primary text-white" onclick={_onHome}><h3>Gestionnaire de jdr</h3></button>
		<button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarColor01" aria-controls="navbarColor01" aria-expanded="false" aria-label="Toggle navigation">
			<span class="navbar-toggler-icon"></span>
		</button>

		<div class="collapse navbar-collapse" id="navbarColor01">
			<ul class="navbar-nav mr-auto">
				<li class="nav-item">
					<button class="btn nav-link hover-primary" onclick={_onListe}><i class="fa fa-id-card"></i> Voir les fiches</button>
				</li>
				<li class="nav-item">
	        		<button class="btn nav-link" onclick={_onStoryLine}><i class="fa fa-archive" aria-hidden="true"></i> StoryLine</button>
				</li>
				<li class="nav-item">
					<button class="btn nav-link" onclick={_onNewPersonnage}><i class="fa fa-user" aria-hidden="true"></i> Nouveau Personnage</button>
				</li>
			</ul>
			<ul if={user.estMJ == 1} class="navbar-nav my-2 my-lg-0">
				<li class="nav-item">
					<a class="nav-link" href="./creationCompte.php"><i class="fa fa-sign-in" aria-hidden="true"></i> Créer un compte joueur</a>
				</li>
			</ul>
			<ul class="navbar-nav my-2 my-lg-0">
				<li class="nav-item">
					<a class="nav-link" href="./deconnexion.php"><i class="fa fa-sign-out" aria-hidden="true"></i> Déconnexion</a>
				</li>
			</ul>
		</div>
	</nav>


	<!-- dashboard -->
	<dashboard if={state.home}></dashboard>
	
	<!-- gestions des fiches -->
	<div class="row d-flex align-items-center" if={state.liste}>
		<vignette each={p in state.vignette} perso={p} fct={_toggle} return={_onListe}></vignette>
	</div>

	<!-- Affichage d'une fiche en plein écran -->
	<fiche perso={state.curPerso} if={state.fiche} return={_onListe} idPersonnage={state.idCurPerso}></fiche>

	<!-- La Storyline -->
	<div class="container mx_auto text-center" if={state.storyline}>
		<button class="btn btn-info" onclick={_toggleChapitre} if={!state.newChapitre}>Ajouter un chapitre</button>
		<div if={state.newChapitre}>
			<button class="btn btn-info" onclick={_toggleChapitre}>Fermer ce menu</button>
			<newchapitre fct={_onStoryLine}></newchapitre>
		</div>
		<chapitre each={c in state.chapitres} storyline={c} fct={_onStoryLine}></chapitre>
	</div>

	<!-- La création de personnage -->
	<div if={state.newPersonnage}>
		<newpersonnage fct={_newPersonnageCreated}></newpersonnage>
	</div>
	
	<script>
		export default {
			state : {
				home : true,
				liste : false,
				fiche : false,
				storyLine : false,
				newPersonnage : false,
				newchapitre : false,
				chapitres : [],
				vignette : [],
				tmp : [],

				idCurPerso : null,
				curPerso : null
			},

			onMounted(state, props) {
				this.sa.getStoryLine().then(
					(e) => {
						this.state.chapitres = JSON.parse(e);
						this.update();

						this.sa.getAllVignette().then(
							(f) => {
								this.state.vignette = JSON.parse(f);
								this._triVignettes();
								this.update();
							}
						);
					}
				);
			},

			// Fonction du fils pour afficher une fiche en entier
			_toggle(id){
				this.update({"idCurPerso":id});
				this._fullVer();

			},

			_toggleChapitre(){
				this.state.newChapitre = !this.state.newChapitre;
				this.update();
			},

			_newPersonnageCreated() {
				this._onListe();
			},

			//Fonction du pere pour afficher une fiche en entier
			_fullVer(){
				this.sa.getPersonnage(this.state.idCurPerso).then(
					(e) => {
						this.state.curPerso = JSON.parse(e);
						this.update();

						this.state.liste = false;
						this.state.fiche = true;
						this.state.storyline = false;
						this.state.newPersonnage = false;
						this.update();
					}
				);
			},

			//Fonction du boutton retour
			_onListe(){
				this.sa.getAllVignette().then(
					(e) => {
						this.state.vignette = JSON.parse(e);
						this._triVignettes();
						this.state.home = false;
						this.state.liste = true;
						this.state.fiche = false;
						this.state.storyline = false;
						this.state.newPersonnage = false;
						this.update();
					}	
				);
			},

			_onStoryLine(){
				this.sa.getStoryLine().then(
					(e) => {
						this.state.chapitres = JSON.parse(e);
						this.update();
						this.state.home = false;
						this.state.liste = false;
						this.state.fiche = false;
						this.state.newPersonnage = false;
						this.state.storyline = true;
						this.update();
					}
				);
			},

			_onNewPersonnage(){
				this.state.home = false;
				this.state.liste = false;
				this.state.fiche = false;
				this.state.newPersonnage = true;
				this.state.storyline = false;
				this.update();
			},

			_onHome(){
				this.state.home = true;
				this.state.liste = false;
				this.state.fiche = false;
				this.state.newPersonnage = false;
				this.state.storyline = false;
				this.update();
			},


			_triVignettes(){
				if(user.estMJ == 0){
					j = 0;
					for(i = 0; i < this.state.vignette.length; i++){
						if(this.state.vignette[i].idUtilisateur == user.id || this.state.vignette[i].nomEtat == "ACTIF" || this.state.vignette[i].nomEtat == "MORT"){
							this.state.tmp[j] = this.state.vignette[i];
							j++;
						}
					}
					this.state.vignette = this.state.tmp;
				}
			}
		}
	</script>
</app>